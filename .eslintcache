[{"/home/pavan/Desktop/be_eja/t-beeja-web/src/index.js":"1","/home/pavan/Desktop/be_eja/t-beeja-web/src/App.js":"2","/home/pavan/Desktop/be_eja/t-beeja-web/src/history.js":"3","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/LoginPage.js":"4","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/HomePage.js":"5","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/ListOfEmployee.js":"6","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/CreateEmployee.js":"7","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/EditEmployee.js":"8","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/EmployeeDetails.js":"9","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/HR_Page.js":"10","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/ListofPersonalDetails.js":"11","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/CreatePersonalDetails.js":"12","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/PersonalDetails.js":"13","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/Accounting.js":"14","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/CreateSystemDetail.js":"15","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/EditPersonalDetails.js":"16","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/ListofInventory.js":"17","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/EditSystemdetails.js":"18","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/SystemDetails.js":"19"},{"size":712,"mtime":1616538788373,"results":"20","hashOfConfig":"21"},{"size":2304,"mtime":1617608222472,"results":"22","hashOfConfig":"21"},{"size":84,"mtime":1616137004760,"results":"23","hashOfConfig":"21"},{"size":1901,"mtime":1616137004760,"results":"24","hashOfConfig":"21"},{"size":2417,"mtime":1617601752455,"results":"25","hashOfConfig":"21"},{"size":5550,"mtime":1617604244335,"results":"26","hashOfConfig":"21"},{"size":6707,"mtime":1616137004756,"results":"27","hashOfConfig":"21"},{"size":7194,"mtime":1617271458997,"results":"28","hashOfConfig":"21"},{"size":4641,"mtime":1617601740098,"results":"29","hashOfConfig":"21"},{"size":2189,"mtime":1617620105399,"results":"30","hashOfConfig":"21"},{"size":5575,"mtime":1617272745976,"results":"31","hashOfConfig":"21"},{"size":5942,"mtime":1616137004756,"results":"32","hashOfConfig":"21"},{"size":4610,"mtime":1617272580753,"results":"33","hashOfConfig":"21"},{"size":1970,"mtime":1617620379235,"results":"34","hashOfConfig":"21"},{"size":5439,"mtime":1617607561086,"results":"35","hashOfConfig":"21"},{"size":6585,"mtime":1617272632035,"results":"36","hashOfConfig":"21"},{"size":5664,"mtime":1617606509021,"results":"37","hashOfConfig":"21"},{"size":5606,"mtime":1617610586495,"results":"38","hashOfConfig":"21"},{"size":3979,"mtime":1617609409966,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"lpre5p",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"42"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"91","usedDeprecatedRules":"42"},"/home/pavan/Desktop/be_eja/t-beeja-web/src/index.js",[],["92","93"],"/home/pavan/Desktop/be_eja/t-beeja-web/src/App.js",[],"/home/pavan/Desktop/be_eja/t-beeja-web/src/history.js",[],"/home/pavan/Desktop/be_eja/t-beeja-web/src/component/LoginPage.js",[],"/home/pavan/Desktop/be_eja/t-beeja-web/src/component/HomePage.js",["94","95","96","97","98","99","100"],"import React, { Component, Fragment } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport './images/mobile_black.png';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\ncolor: ${(props) => props.color};\nposition: sticky;\ntop: 0px;\nfont-size: 20px;\npadding: 8px;\ntext-align:${(props) => props.text};\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom:-5px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 3px solid #ddd;\n`;\nconst TableData = Styled.td`\nborder: 3px solid #ddd;\nheight:100px;\nfont-size:20px;\nfont-weight:bold;\nvertical-align:bottom;\ntext-align:left;\n&:hover {background-color: grey;}\n`;\nconst TableRow = Styled.tr`\n\n`;\nconst Button = Styled.button`\nbackground-color:white;\nborder:none;\nheight:100px;\nfont-size:20px;\nwidth:300px;\n\n `;\n\n \n// color:black;\n// border: 3px solid #ddd;\n//  &:nth-child(even){background-color: #F2F2F2;}\n// background-color: ${props =>\n//         props.save ? 'powderblue' : 'white'};\nexport const HomePage = () => {\n\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\" text=\"center\">\n                Home page\n                    </Navbar>\n            <Table>\n                <TableRow>\n                    <TableRow><TableData>\n                          <LinkTag to={\"/hr\"} >\n                          <Button>HR </Button></LinkTag></TableData></TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to={\"/ss\"}> <Button>ACCOUNTING</Button></LinkTag>\n                    </TableData></TableRow>\n                   \n                        <LinkTag to={\"/list\"} >\n                        <TableRow><TableData><Button>\n                            EMOPLOYEE DIRECTORY</Button></TableData></TableRow>\n                             </LinkTag>\n                    \n                    <TableRow><TableData> <Button> CLIENT </Button></TableData></TableRow>\n\n                    <TableRow ><TableData>\n<Button>\n                        DOCUMENTATION</Button>\n                        </TableData></TableRow>\n\n                </TableRow>\n            </Table>\n        </Fragment>\n    )\n}","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/ListOfEmployee.js",["101","102","103","104","105","106","107","108","109"],"import React, { Component, Fragment, useState, } from 'react';\nimport Styled from '@emotion/styled';\nimport { Link, useParams, useHistory } from 'react-router-dom'\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash, faSearch } from '@fortawesome/free-solid-svg-icons'\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\ntext-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst Actionbutton = Styled.button`\nheight:15px;\nwidth:15px;\ndisplay:inline-block;\nbackground-color:rgba(255,255,255,0.7);\nborder:1px solid gray;\n`;\nconst IdButton = Styled.button`\nborder:none;\noutline:none;\n    `;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover = Styled.a`\n&:hover {\n    color:blue;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:57%;\nheight:25px;\nfont-size:15px;\n`;\n\n\nexport const ListOfEmployee = () => {\n\n    const { _id,code } = useParams();\n\n    const Show = gql`\n{\n    employeeList{\n    _id\n    name\n    code\n    email\n    role\n    department\n    joinedDate\n    mobileNo\n    }\n  }`;\n\n    const [empCode, setEmpCode] = useState({ 'codeToDelete': \"\" });\n\n    const DELETE_Employee = gql`\n    mutation DeleteEmployee($code: String!){\n    deleteEmployee(code: $code){\n    respCode,\n    respMessage \n  }\n}\n`;\n\n    const { loading, error, data } = useQuery(Show);\n    const [deleteMutation] = useMutation(DELETE_Employee);\n\n    const handleDelete = (deleteCode) => {\n        if (window.confirm(\"Do you really want to leave?\")) {\n            setEmpCode({ 'idToDelete': deleteCode });\n            console.log(\"handleDelete\", deleteCode, empCode);\n            deleteMutation({ variables: { code: deleteCode } });\n\n        }\n        else {\n\n        }\n    };\n\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                List of Employee\n                <Input type=\"text\" placeholder=\"Search\" ></Input>\n                <Button >\n                    <LinkTag to={\"/adding\"}>Add Employee</LinkTag>\n                </Button>\n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n                    <TableRow>\n                        <TableHeading>ID</TableHeading>\n                        <TableHeading>Name</TableHeading>\n                        <TableHeading>Email</TableHeading>\n                        <TableHeading>Role</TableHeading>\n                        <TableHeading>Department</TableHeading>\n                        <TableHeading>JoiningDate</TableHeading>\n                        <TableHeading>MobileNumber</TableHeading>\n                        <TableHeading>Edit</TableHeading>\n                        <TableHeading>Delete</TableHeading>\n                    </TableRow>\n\n                    {data.employeeList.map((employee,code) => (\n                        <TableRow>\n                            <a href=\"\">\n                                <LinkTag to={`/display/${employee.code}`}>\n                                    <Hover>\n                                        <TableData key={code}>{employee.code}</TableData>\n                                    </Hover>\n                                </LinkTag>\n                            </a>\n                            <TableData>{employee.name}</TableData>\n                            <TableData>{employee.email}</TableData>\n                            <TableData>{employee.role}</TableData>\n                            <TableData>{employee.department}</TableData>\n                            <TableData>{employee.joinedDate}</TableData>\n                            <TableData>{employee.mobileNo}</TableData>\n\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <LinkTag to={`/edit/${employee.code}`}>\n                                    <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                                </LinkTag>\n                            </TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <Button onClick={() => handleDelete(employee.code)} >\n                                    <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\n                                </Button>\n                            </TableData>\n                        </TableRow>\n                    )\n                    )}\n                </Table>\n            </Container>\n        </Fragment>\n    )\n}","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/CreateEmployee.js",["110","111","112","113"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql } from '@apollo/client';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n       props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const CreateEmployee = () => {\n\n    const [formData, createFormData] = useState({\n        username:\"\",\n        code: \"\",\n        email: \" \",\n        mobileNO: \"\",\n        department: \"\",\n        role: \"\",\n        joinDate: \"\"\n    });\n\n    const EmployeeList = gql`\n     mutation {\n         createEmployee(data: {\n              name:\"${formData.username}\",\n              code:\"${formData.code}\",\n              email:\"${formData.email}\",\n              mobileNo:\"${formData.mobileNO}\",\n              department:\"${formData.department}\",\n              role:\"${formData.role}\",\n             joinedDate:\"${formData.joinDate}\"   \n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [EmployeeCreate, { loading, error, data }] = useMutation(EmployeeList);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n         EmployeeCreate();\n        showToast();\n    };\n\n    toast.configure()\n    const showToast = () => {\n    if (error)  { \n        toast.info('successful');\n    }\n};\n\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Create an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobileNO\" onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn><Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinDate\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                                <LinkTag to={\"/list\"}>Submit</LinkTag>\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/EditEmployee.js",["114","115","116"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwcodeth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwcodeth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwcodeth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwcodeth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EditEmployee = () => {\n\n    const { code } = useParams();\n\n\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email: \" \",\n        mobileNo: \"\",\n        department: \"\",\n        role: \"\",\n        joinedDate: \"\"\n    })\n\n    const GetEmployeeBycode = gql`\n    query EmpDetails($code:String!){\n        employee(code:$code){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const EmployeeEdit = gql`\n     mutation UpdateEmployee($code:String!){\n         updateEmployee(code:$code,data: {\n              name:\"${empState.username}\",\n              code:\"${empState.code}\",\n              email:\"${empState.email}\",\n              mobileNo:\"${empState.mobileNo}\",\n              department:\"${empState.department}\",\n              role:\"${empState.role}\",\n             joinedDate:\"${empState.joinedDate}\"   \n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\n    const { loading, error, data } = useQuery(GetEmployeeBycode, { variables: { code: code } });\n\n    const [EditMutation,] = useMutation(EmployeeEdit);\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n    const handleChange = (e) => {\n        setState({\n            ...empState,\n            [e.target.name]: e.target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(empState);\n        EditMutation({ variables: { code: code } });\n\n    };\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Edit an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name:</Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" defaultValue={data.employee.name}  onChange={handleChange} required /></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-code\"> Employee code: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" defaultValue={data.employee.code} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" defaultValue={data.employee.email} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobileNo\" defaultValue={data.employee.mobileNo} onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" defaultValue={data.employee.department} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" defaultValue={data.employee.role} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn> <Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinedDate\" defaultValue={data.employee.joinedDate} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Button type=\"Cancel\">\n                            <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                        </Button></TableColumn>\n\n\n                        <TableColumn><Button onClick={handleSubmit}>\n                            <LinkTag to={\"/list\"}>\n                                Submit\n                        </LinkTag>\n                        </Button></TableColumn>\n\n                    </TableRow>\n\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n// defaultValue={data.employee.name}","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/EmployeeDetails.js",["117","118","119","120","121","122","123","124","125","126","127","128","129"],"import React, { Component, Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EmployeeDetails = () => {\n\n    const { code ,id} = useParams();\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email: \" \",\n        mobileNo: \"\",\n        department: \"\",\n        role: \"\",\n        joinedDate: \"\"\n    })\n    const GetEmployeeById = gql`\n    query EmpDetails($code:String!){\n        employee(code:$code){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const { loading, error, data } = useQuery(GetEmployeeById, { variables: { code: code} });\n \n    if (data && data.employee) {\n    empState.name = data.employee.name;\n    empState .code = data.employee.code;\n    empState.email = data.employee.email;\n    empState.mobileNo = data.employee.mobileNo;\n    empState.department = data.employee.department;\n    empState.role = data.employee.role;\n    empState.joinedDate = data.employee.joinedDate;\n    }\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Employee Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={empState.name} readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code </Lable></TableColumn>\n                        <TableColumn>:<Input  value={empState.code}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input  value={empState.email}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number </Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.mobileNo}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department</Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.department} readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.role}  readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date</Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.joinedDate} readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                   \n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/HR_Page.js",["130","131","132","133","134","135","136"],"/home/pavan/Desktop/be_eja/t-beeja-web/src/component/ListofPersonalDetails.js",["137","138","139","140","141","142","143"],"import { React, Fragment, useState } from \"react\";\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faPlus, faEdit, faTrash } from '@fortawesome/free-solCode-svg-icons';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { faEdit, faTrash, faSearch,faPlus } from '@fortawesome/free-solid-svg-icons'\n\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\ntext-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst Actionbutton = Styled.button`\nheight:15px;\nwidth:15px;\ndisplay:inline-block;\nbackground-color:rgba(255,255,255,0.7);\nborder:1px solid gray;\n`;\nconst IdButton = Styled.button`\nborder:none;\noutline:none;\n    `;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover = Styled.a`\n&:hover {\n    color:blue;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:57%;\nheight:25px;\nfont-size:15px;\n`;\n\n\n\nexport const PersonalDetails = () => {\n    const { code } = useParams();\n    const [empCode, setEmpCode] = useState({ 'CodeToDelete': \"\" });\n    const Show = gql`\n   query{ \n    personalList{\n        _id\n        name\n        code\n        email\n        role\n        pan_No\n        account_No\n        ifsc_code\n    }\n }`;\n    const DELETE_PD = gql`\n mutation DeletePD($code: String!){\n    deletePersonalDetails(code: $code){\n respCode,\n respMessage \n}\n}\n`;\n\n    const { loading, error, data } = useQuery(Show);\n    const [deleteMutation] = useMutation(DELETE_PD);\n    const handleDelete = (deleteCode) => {\n        if (window.confirm(\"Do you really want to leave?\")) {\n            setEmpCode({ 'idToDelete': deleteCode });\n            console.log(\"handleDelte\", deleteCode, empCode);\n            deleteMutation({ variables: { code: deleteCode } });\n\n        }\n        else {\n\n        }\n    };\n\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    console.log(data);\n   \n    return (\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">Personal Details\n<Button >\n                    <LinkTag to={\"/createpresonal\"}>\n                        <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>    ADD</LinkTag>\n                </Button>\n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n                    <TableRow>\n                        <TableHeading>Code</TableHeading>\n                        <TableHeading>Name</TableHeading>\n                        <TableHeading>Email</TableHeading>\n                        <TableHeading>Role</TableHeading>\n                        <TableHeading>PAN</TableHeading>\n                        <TableHeading>Account Number</TableHeading>\n                        <TableHeading>IFSC Code</TableHeading>\n                        <TableHeading>Edit</TableHeading>\n                        <TableHeading>Delete</TableHeading>\n                    </TableRow>\n                    {data.personalList.map((emp, code) => (\n                        <TableRow>\n                            <a href=\"\">\n                                <LinkTag to={`/pd/${emp.code}`}>\n                                    <Hover>\n                                        <TableData key={code}>{emp.code}</TableData>\n                                    </Hover>\n                                </LinkTag>\n                            </a>\n                            <TableData>{emp.name}</TableData>\n                            <TableData>{emp.email}</TableData>\n                            <TableData>{emp.role}</TableData>\n                            <TableData>{emp.pan_No}</TableData>\n                            <TableData>{emp.account_No}</TableData>\n                            <TableData>{emp.ifsc_code}</TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <LinkTag to={`/editpersonal/${emp.code}`}>\n                                    <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                                </LinkTag>\n                            </TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n\n                                <Button onClick={() => handleDelete(emp.code)} >\n                                    <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\n                                </Button>\n\n                            </TableData>\n\n                        </TableRow>\n                    ))\n                    }\n                </Table>\n            </Container>\n\n        </Fragment>\n\n    )\n}\n\n","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/CreatePersonalDetails.js",["144","145","146","147"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n       props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\nexport const Create_PersonalDetails=()=>{\n\n    const [formData, createFormData] = useState({\n        name:\"\",\n        code: \"\",\n        email: \" \",\n       role: \"\",\n        pan: \"\",\n       account: \"\",\n        ifsc: \"\"\n    });\n\n    const Personal = gql`\n     mutation {\n        createPersonalDetails(data:{\n              name:\"${formData.name}\",\n              code:\"${formData.code}\",\n              email:\"${formData.email}\",\n              role:\"${formData.role}\",\n              pan_No:\"${formData.pan}\",\n              account_No:\"${formData.account}\",\n              ifsc_code:\"${formData.ifsc}\"   \n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [PDCreate, { loading, error, data }] = useMutation(Personal);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n      PDCreate();\n    };\n   console.log(formData.name);\n    return(\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Add Personal Details\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"name\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\"  name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\"  name=\"email\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                   \n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\"  onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"PAN\"> PAN: </Lable></TableColumn>\n                        <TableColumn><Input  name=\"pan\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Account Number\" >Account Number: </Lable></TableColumn>\n                        <TableColumn><Input name=\"account\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"IFSC Code\">IFSC Code: </Lable></TableColumn>\n                        <TableColumn><Input  name=\"ifsc\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/personal\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                                <LinkTag to={\"/personal\"}>Submit</LinkTag>\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    )\n}","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/PersonalDetails.js",["148","149","150","151","152","153","154","155","156"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const Personal_Details = () => {\n    const { code} = useParams();\n    const [personState, setState] = useState({\n        name: \"\",\n        code: \"\",\n        email: \"\",\n        role: \" \",\n        pan_No: \"\",\n        account_No: \"\",\n        ifsc_code: \"\"\n    })\n\n\n    const DisplayPD = gql`\n    query PDDisplay($code:String!){\n        personal(code:$code){\n            name\n            code\n            email\n            role\n            pan_No\n            account_No\n            ifsc_code\n          }\n    }\n    `;\n\n    const { loading, error, data } = useQuery(DisplayPD, { variables: { code: code } });\n\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n    if (data && data.personal) {\n        personState.name = data.personal.name;\n        personState.code = data.personal.code;\n        personState.email = data.personal.email;\n        personState.role = data.personal.role;\n        personState.pan_No = data.personal.pan_No;\n        personState.account_No = data.personal.account_No;\n        personState.ifsc_code = data.personal.ifsc_code;\n    }\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Personal Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={personState.name} readOnly /></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code </Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.code} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.email} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.role} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"PAN\"> PAN</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.pan_No} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Account Number\"> Account Number</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.account_No} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"IFSC\"> IFSC</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.ifsc_code} readOnly /></TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/Accounting.js",["157","158","159","160","161","162","163"],"/home/pavan/Desktop/be_eja/t-beeja-web/src/component/CreateSystemDetail.js",["164","165","166","167","168","169"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql } from '@apollo/client';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const CreateSystem = () => {\n    const [formData, createFormData] = useState({\n        username:\"\",\n        code: \"\",\n        device: \" \",\n        devicehistory: \"\",\n        slno_scode_regno: \"\",\n        config: \"\"\n       \n    });\n\n    const SystemdetailsList = gql`\n     mutation {\n        createSystemDetails(data: {\n              name:\"${formData.username}\",\n              code:\"${formData.code}\",\n              device:\"${formData.device}\",\n              devicehistory:\"${formData.devicehistory}\",\n              slno_scode_regno:\"${formData.slno_scode_regno}\",\n              config:\"${formData.config}\"\n               \n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [SystemCreate, { loading, error, data }] = useMutation(SystemdetailsList);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n         SystemCreate();\n        showToast();\n    };\n\n    toast.configure()\n    const showToast = () => {\n    if (error)  { \n        toast.info('successful');\n    }\n};\n\n    return (\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Create an SystemdetailsList\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"device\"> device: </Lable></TableColumn>\n                        <TableColumn><Input type=\"device\" name=\"device\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"devicehistory\"> devicehistory: </Lable></TableColumn>\n                        <TableColumn><Input type=\"devicehistory\" name=\"devicehistory\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"config\"> config: </Lable></TableColumn>\n                        <TableColumn><Input type=\"config\" name=\"config\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"slno_scode_regno\"> slno_scode_regno: </Lable></TableColumn>\n                        <TableColumn><Input type=\"slno_scode_regno\" name=\"slno_scode_regno\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    \n\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/inv\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                                <LinkTag to={\"/inv\"}>Submit</LinkTag>\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n\n                </Table>\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/EditPersonalDetails.js",["170","171","172"],"import React, { Component, Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EditPersonalDetails = () => {\n\n    const { code } = useParams();\n\n\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email: \"\",\n        role: \" \",\n        pan_No: \"\",\n        account_No: \"\",\n        ifsc_code: \"\"\n    })\n\n    const DisplayPD = gql`\n    query PDDisplay($code:String!){\n        personal(code:$code){\n            name\n            code\n            email\n            role\n            pan_No\n            account_No\n            ifsc_code\n          }\n    }\n    `;\n\n    const EditPd = gql`\n     mutation UpdatePersonalDetail($code: String!){\n        updatepersonalDetail(code:$code,data: {\n              name:\"${empState.username}\",\n              code:\"${empState.code}\",\n              email:\"${empState.email}\",\n              role:\"${empState.role}\",\n              pan_No:\"${empState.pan_No}\",\n              account_No:\"${empState.account_No}\",\n              ifsc_code:\"${empState.ifsc_code}\",\n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\n    const { loading, error, data } = useQuery(DisplayPD, { variables: { code: code } });\n\n    const [EditMutation] = useMutation(EditPd);\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n\n    const handleChange = (e) => {\n        setState({\n            ...empState,\n            [e.target.name]: e.target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(empState);\n        EditMutation({ variables: { code: code } });\n\n    };\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Edit Personal Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name:</Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" defaultValue={data.personal.name} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" defaultValue={data.personal.code} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" defaultValue={data.personal.email} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" defaultValue={data.personal.role} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"PAN\"> PAN: </Lable></TableColumn>\n                        <TableColumn><Input name=\"pan_No\" defaultValue={data.personal.pan_No} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"AccountNumber\">Account Number: </Lable></TableColumn>\n                        <TableColumn><Input name=\"account_No\" defaultValue={data.personal.account_No} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"IFSC\">IFSC: </Lable></TableColumn>\n                        <TableColumn><Input name=\"ifsc_code\" defaultValue={data.personal.ifsc_code} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n\n                    <TableRow>\n                        <TableColumn ><Button type=\"Cancel\">\n                            <LinkTag to={\"/personal\"}>Cancel</LinkTag>\n                        </Button></TableColumn>\n\n\n                        <TableColumn><Button onClick={handleSubmit}>\n                            <LinkTag to={\"/personal\"}>\n                                Submit\n                        </LinkTag>\n                        </Button></TableColumn>\n\n                    </TableRow>\n\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/ListofInventory.js",["173","174","175","176","177","178","179","180","181","182","183"],"import React, { Component, Fragment, useState, } from 'react';\nimport Styled from '@emotion/styled';\nimport { Link, useParams, useHistory } from 'react-router-dom'\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash, faSearch, faTruckLoading } from '@fortawesome/free-solid-svg-icons'\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\ntext-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst Actionbutton = Styled.button`\nheight:15px;\nwidth:15px;\ndisplay:inline-block;\nbackground-color:rgba(255,255,255,0.7);\nborder:1px solid gray;\n`;\nconst IdButton = Styled.button`\nborder:none;\noutline:none;\n    `;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover = Styled.a`\n&:hover {\n    color:blue;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:57%;\nheight:25px;\nfont-size:15px;\n`;\n\n\nexport const ListofInventory = () => {\n    const{_id,code} = useParams();\n\n    const System = gql`\n    {\n        systemdetailsList{\n            _id\n            name\n            code\n            device\n            devicehistory\n            config\n            respCode\n            respMessage\n            slno_scode_regno\n\n        }\n    }`;\n    const [invCode,setInvCode] = useState({'codeToDelete': \"\"});\n\n    const DELETE_INV  =gql`\n    mutation DeleteInventory($code:String!){\n        deleteInventory(code: $code){\n            respCode,\n            respMesssage\n        }\n    }`;\n\n      \n      const { loading, error , data }  = useQuery(System);\n      const [deleteMutation] = useMutation(DELETE_INV);\n\n      const handleDelete = (deleteCode) => {\n          if(window.confrim (\"Do You really want to Delete? \")){\n              setInvCode({'codeToDelete' : deleteCode});\n              console.log(\"handleDelete\",deleteCode,invCode);\n              deleteMutation({variables:{code:deleteCode}});\n              \n          }\n          else{\n\n          }\n      };\n\n      if (loading) return <p>Loading..</p>;\n      if (error) return <p>ERror</p>;\n\n   \n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                List of Inventory\n                \n                <Button >\n                    <LinkTag to={\"/cc\"}>Add Inventory</LinkTag>\n                </Button>\n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n\n                    </TableRow>\n                    <TableRow>\n                        <TableHeading>ID</TableHeading>\n                        <TableHeading>Name</TableHeading>\n                        <TableHeading>Device</TableHeading>\n                        <TableHeading>Config</TableHeading>\n                        <TableHeading>SL.No/S.Code/Reg.No</TableHeading>\n                        <TableHeading>DeviceHistory</TableHeading>\n                       \n                        <TableHeading>Edit</TableHeading>\n                        <TableHeading>Delete</TableHeading>\n\n                    {data.systemdetailsList.map((systemdetails,code) => (\n                        <TableRow>\n                            <a href=\"\">\n                                <LinkTag to={`/read/${systemdetails.code}`}>\n                                    <Hover>\n                                        <TableData key={code}>{systemdetails.code}</TableData>\n                                    </Hover>\n                                </LinkTag>\n                            </a>\n                            <TableData>{systemdetails.name}</TableData>\n                            <TableData>{systemdetails.device} </TableData>\n                            <TableData>{systemdetails.config} </TableData>\n                            <TableData>{systemdetails.slno_scode_regno}</TableData>\n                            <TableData>{systemdetails.devicehistory}</TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <LinkTag to={`/eedit/${systemdetails.code}`}>\n                                    <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                                </LinkTag>\n                            </TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <Button onClick={() => handleDelete(systemdetails.code)} >\n                                    <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\n                                </Button>\n                            </TableData>\n                        </TableRow>\n                    ))}\n\n                   \n                </Table>\n            </Container>\n        </Fragment>\n    )\n}","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/EditSystemdetails.js",["184","185","186","187","188","189"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwcodeth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwcodeth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwcodeth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwcodeth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EditSystem = () => {\n\n    const {code} =useParams();\n\n    const[sysState,setState] = useState({\n        username:\"\",\n        code:\"\",\n        device:\"\",\n        devicehistory:\"\",\n        config:\"\",\n        slno_scode_regno:\"\"\n    })\nconst GetSystemDetailsByCode = gql`\nquery SysDetails($code:String!){\n    systemdetails(code:$code){\n        name\n        code\n        _id\n        slno_scode_regno\n        config\n        device\n        devicehistory\n\n    }\n}`;\n\nconst SystemEdit = gql`\n     mutation UpdateSystemDetails($code:String!){\n         updatesystem(code:$code,data: {\n              name:\"${sysState.username}\",\n              code:\"${sysState.code}\",\n              device:\"${sysState.device}\",\n              devicehistory:\"${sysState.devicehistory}\",\n              config:\"${sysState.config}\",\n              slno_scode_regno:\"${sysState.slno_scode_regno}\",\n               \n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\nconst{loading,error,data} = useQuery(GetSystemDetailsByCode,{variables:{code:code}});\n\nconst [EditMutation] = useMutation(SystemEdit);\nif (loading) return <p>Loading....</p>\nif (error) return <p>ERROR....</p>\n\nconst handleChange = (e) => {\n    setState({\n        ...sysState,\n        [e.target.name]: e.target.value.trim(),\n\n    });\n};\n\nconst handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(sysState);\n    EditMutation({variables:{code:code}});\n};\n\n  \n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Edit System Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n                <TableRow>\n                    <TableColumn>    <Lable htmlFor=\"Name\">Name</Lable>        </TableColumn>\n                    <TableColumn ><Input type=\"text\" name=\"username\" defaultValue={data.systemdetails.name}  onChange={handleChange} required /></TableColumn>\n\n                </TableRow><Break />\n                <TableRow>\n                    <TableColumn>    <Lable htmlFor=\"Code\">Code</Lable>        </TableColumn>\n                    <TableColumn ><Input type=\"text\" name=\"code\" defaultValue={data.systemdetails.code}  onChange={handleChange} required /></TableColumn>\n\n                </TableRow><Break />\n                <TableRow>\n                    <TableColumn>    <Lable htmlFor=\"Device\">Device</Lable>        </TableColumn>\n                    <TableColumn ><Input type=\"text\" name=\"device\" defaultValue={data.systemdetails.device}  onChange={handleChange} required /></TableColumn>\n\n                </TableRow><Break />\n                <TableRow>\n                    <TableColumn>    <Lable htmlFor=\"History\">History</Lable>        </TableColumn>\n                    <TableColumn ><Input type=\"text\" name=\"devicehistory\" defaultValue={data.systemdetails.devicehistory}  onChange={handleChange} required /></TableColumn>\n\n                </TableRow><Break />\n                <TableRow>\n                    <TableColumn>    <Lable htmlFor=\"Slno_Scode_regno\">Slno_Scode_regno</Lable>        </TableColumn>\n                    <TableColumn ><Input type=\"text\" name=\"sln0_scode_regno\" defaultValue={data.systemdetails.slno_scode_regno}  onChange={handleChange} required /></TableColumn>\n\n                </TableRow><Break />\n                <TableRow>\n                    <TableColumn>    <Lable htmlFor=\"Config\">Config</Lable>        </TableColumn>\n                    <TableColumn ><Input type=\"text\" name=\"config\" defaultValue={data.systemdetails.config}  onChange={handleChange} required /></TableColumn>\n\n                </TableRow><Break />\n                <TableRow>\n                        <TableColumn ><Button type=\"Cancel\">\n                            <LinkTag to={\"/inv\"}>Cancel</LinkTag>\n                        </Button></TableColumn>\n\n\n                        <TableColumn><Button onClick={handleSubmit}>\n                            <LinkTag to={\"/inv\"}>\n                                Submit\n                        </LinkTag>\n                        </Button></TableColumn>\n\n                    </TableRow>\n\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/pavan/Desktop/be_eja/t-beeja-web/src/component/SystemDetails.js",["190","191","192","193","194","195","196","197","198","199","200","201"],"import React, { Component, Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n export const SystemDetails = () =>{\n\n    const {code} =useParams();\n    const[sysState,setState] = useState({\n        username:\"\",\n        code:\"\",\n        device:\"\",\n        devicehistory:\"\",\n        config:\"\",\n        slno_scode_regno:\"\"\n    })\nconst GetSystemDetailsByCode = gql`\nquery SysDetails($code:String!){\n    systemdetails(code:$code){\n        name\n        code\n        _id\n        slno_scode_regno\n        config\n        device\n        devicehistory\n\n    }\n}`;\nconst{loading,error,data} = useQuery(GetSystemDetailsByCode,{variables:{code:code}});\n\n\nif (data && data.systemdetails){\n    sysState.name = data.systemdetails.name;\n    sysState.code = data.systemdetails.code;\n    sysState.config = data.systemdetails.config;\n    sysState.device = data.systemdetails.device;\n    sysState.devicehistory = data.systemdetails.devicehistory;\n    sysState.slno_scode_regno = data.systemdetails. slno_scode_regno\n\n}\n\nreturn(\n    <Fragment>\n        <Navbar bgColor=\"grey\" color=\"white\">\n            SystemDetails\n        </Navbar>\n        <Break/>\n        <Container>\n            <Table>\n                <TableRow>\n                    <TableColumn>    <Lable htmlFor=\"Name\">Name</Lable>        </TableColumn>\n                    <TableColumn>    :<Input value={sysState.name} readOnly/>  </TableColumn>\n                </TableRow><Break />\n                <TableRow>\n                    <TableColumn>    <Lable htmlFor=\"Code\">Code</Lable>        </TableColumn>\n                    <TableColumn>    :<Input value={sysState.code} readOnly/>  </TableColumn>\n                </TableRow><Break />\n                <TableRow>\n                    <TableColumn>    <Lable htmlFor=\"Device\">Device</Lable>        </TableColumn>\n                    <TableColumn>    :<Input value={sysState.device} readOnly/>  </TableColumn>\n                </TableRow><Break />\n                <TableRow>\n                    <TableColumn>    <Lable htmlFor=\"History\">History</Lable>        </TableColumn>\n                    <TableColumn>    :<Input value={sysState.devicehistory} readOnly/>  </TableColumn>\n                </TableRow><Break />\n                <TableRow>\n                    <TableColumn>    <Lable htmlFor=\"Slno_Scode_regno\">Slno_Scode_regno</Lable>        </TableColumn>\n                    <TableColumn>    :<Input value={sysState.slno_scode_regno} readOnly/>  </TableColumn>\n                </TableRow><Break />\n                <TableRow>\n                    <TableColumn>    <Lable htmlFor=\"Config\">Config</Lable>        </TableColumn>\n                    <TableColumn>    :<Input value={sysState.config} readOnly/>  </TableColumn>\n                </TableRow><Break />\n            </Table>\n        </Container>\n    </Fragment>\n)\n }",{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"210","line":4,"column":10,"nodeType":"208","messageId":"209","endLine":4,"endColumn":18},{"ruleId":"206","severity":1,"message":"211","line":4,"column":20,"nodeType":"208","messageId":"209","endLine":4,"endColumn":23},{"ruleId":"206","severity":1,"message":"212","line":4,"column":25,"nodeType":"208","messageId":"209","endLine":4,"endColumn":36},{"ruleId":"206","severity":1,"message":"213","line":6,"column":10,"nodeType":"208","messageId":"209","endLine":6,"endColumn":24},{"ruleId":"206","severity":1,"message":"214","line":6,"column":26,"nodeType":"208","messageId":"209","endLine":6,"endColumn":31},{"ruleId":"206","severity":1,"message":"215","line":22,"column":7,"nodeType":"208","messageId":"209","endLine":22,"endColumn":11},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"216","line":3,"column":27,"nodeType":"208","messageId":"209","endLine":3,"endColumn":37},{"ruleId":"206","severity":1,"message":"217","line":6,"column":27,"nodeType":"208","messageId":"209","endLine":6,"endColumn":35},{"ruleId":"206","severity":1,"message":"215","line":16,"column":7,"nodeType":"208","messageId":"209","endLine":16,"endColumn":11},{"ruleId":"206","severity":1,"message":"218","line":66,"column":7,"nodeType":"208","messageId":"209","endLine":66,"endColumn":19},{"ruleId":"206","severity":1,"message":"219","line":73,"column":7,"nodeType":"208","messageId":"209","endLine":73,"endColumn":15},{"ruleId":"206","severity":1,"message":"220","line":96,"column":13,"nodeType":"208","messageId":"209","endLine":96,"endColumn":16},{"ruleId":"206","severity":1,"message":"221","line":96,"column":17,"nodeType":"208","messageId":"209","endLine":96,"endColumn":21},{"ruleId":"222","severity":1,"message":"223","line":168,"column":29,"nodeType":"224","endLine":168,"endColumn":40},{"ruleId":"206","severity":1,"message":"213","line":5,"column":10,"nodeType":"208","messageId":"209","endLine":5,"endColumn":24},{"ruleId":"206","severity":1,"message":"215","line":16,"column":7,"nodeType":"208","messageId":"209","endLine":16,"endColumn":11},{"ruleId":"206","severity":1,"message":"225","line":60,"column":7,"nodeType":"208","messageId":"209","endLine":60,"endColumn":16},{"ruleId":"206","severity":1,"message":"226","line":99,"column":46,"nodeType":"208","messageId":"209","endLine":99,"endColumn":50},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"215","line":14,"column":7,"nodeType":"208","messageId":"209","endLine":14,"endColumn":11},{"ruleId":"206","severity":1,"message":"225","line":58,"column":7,"nodeType":"208","messageId":"209","endLine":58,"endColumn":16},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"212","line":4,"column":10,"nodeType":"208","messageId":"209","endLine":4,"endColumn":21},{"ruleId":"206","severity":1,"message":"215","line":14,"column":7,"nodeType":"208","messageId":"209","endLine":14,"endColumn":11},{"ruleId":"206","severity":1,"message":"227","line":29,"column":7,"nodeType":"208","messageId":"209","endLine":29,"endColumn":16},{"ruleId":"206","severity":1,"message":"228","line":37,"column":7,"nodeType":"208","messageId":"209","endLine":37,"endColumn":13},{"ruleId":"206","severity":1,"message":"229","line":39,"column":7,"nodeType":"208","messageId":"209","endLine":39,"endColumn":13},{"ruleId":"206","severity":1,"message":"225","line":58,"column":7,"nodeType":"208","messageId":"209","endLine":58,"endColumn":16},{"ruleId":"206","severity":1,"message":"230","line":65,"column":7,"nodeType":"208","messageId":"209","endLine":65,"endColumn":14},{"ruleId":"206","severity":1,"message":"231","line":73,"column":19,"nodeType":"208","messageId":"209","endLine":73,"endColumn":21},{"ruleId":"206","severity":1,"message":"232","line":74,"column":22,"nodeType":"208","messageId":"209","endLine":74,"endColumn":30},{"ruleId":"206","severity":1,"message":"233","line":97,"column":13,"nodeType":"208","messageId":"209","endLine":97,"endColumn":20},{"ruleId":"206","severity":1,"message":"234","line":97,"column":22,"nodeType":"208","messageId":"209","endLine":97,"endColumn":27},{"ruleId":"235","severity":1,"message":"236","line":101,"column":5,"nodeType":"237","messageId":"238","endLine":101,"endColumn":19,"fix":"239"},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"210","line":4,"column":10,"nodeType":"208","messageId":"209","endLine":4,"endColumn":18},{"ruleId":"206","severity":1,"message":"211","line":4,"column":20,"nodeType":"208","messageId":"209","endLine":4,"endColumn":23},{"ruleId":"206","severity":1,"message":"212","line":4,"column":25,"nodeType":"208","messageId":"209","endLine":4,"endColumn":36},{"ruleId":"206","severity":1,"message":"213","line":6,"column":10,"nodeType":"208","messageId":"209","endLine":6,"endColumn":24},{"ruleId":"206","severity":1,"message":"214","line":6,"column":26,"nodeType":"208","messageId":"209","endLine":6,"endColumn":31},{"ruleId":"206","severity":1,"message":"215","line":22,"column":7,"nodeType":"208","messageId":"209","endLine":22,"endColumn":11},{"ruleId":"206","severity":1,"message":"217","line":7,"column":27,"nodeType":"208","messageId":"209","endLine":7,"endColumn":35},{"ruleId":"206","severity":1,"message":"215","line":19,"column":7,"nodeType":"208","messageId":"209","endLine":19,"endColumn":11},{"ruleId":"206","severity":1,"message":"218","line":69,"column":7,"nodeType":"208","messageId":"209","endLine":69,"endColumn":19},{"ruleId":"206","severity":1,"message":"219","line":76,"column":7,"nodeType":"208","messageId":"209","endLine":76,"endColumn":15},{"ruleId":"206","severity":1,"message":"240","line":88,"column":7,"nodeType":"208","messageId":"209","endLine":88,"endColumn":12},{"ruleId":"206","severity":1,"message":"221","line":99,"column":13,"nodeType":"208","messageId":"209","endLine":99,"endColumn":17},{"ruleId":"222","severity":1,"message":"223","line":166,"column":29,"nodeType":"224","endLine":166,"endColumn":40},{"ruleId":"206","severity":1,"message":"210","line":4,"column":28,"nodeType":"208","messageId":"209","endLine":4,"endColumn":36},{"ruleId":"206","severity":1,"message":"215","line":13,"column":7,"nodeType":"208","messageId":"209","endLine":13,"endColumn":11},{"ruleId":"206","severity":1,"message":"225","line":57,"column":7,"nodeType":"208","messageId":"209","endLine":57,"endColumn":16},{"ruleId":"206","severity":1,"message":"226","line":95,"column":40,"nodeType":"208","messageId":"209","endLine":95,"endColumn":44},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"212","line":5,"column":10,"nodeType":"208","messageId":"209","endLine":5,"endColumn":21},{"ruleId":"206","severity":1,"message":"215","line":16,"column":7,"nodeType":"208","messageId":"209","endLine":16,"endColumn":11},{"ruleId":"206","severity":1,"message":"227","line":31,"column":7,"nodeType":"208","messageId":"209","endLine":31,"endColumn":16},{"ruleId":"206","severity":1,"message":"228","line":39,"column":7,"nodeType":"208","messageId":"209","endLine":39,"endColumn":13},{"ruleId":"206","severity":1,"message":"229","line":41,"column":7,"nodeType":"208","messageId":"209","endLine":41,"endColumn":13},{"ruleId":"206","severity":1,"message":"225","line":60,"column":7,"nodeType":"208","messageId":"209","endLine":60,"endColumn":16},{"ruleId":"206","severity":1,"message":"230","line":66,"column":7,"nodeType":"208","messageId":"209","endLine":66,"endColumn":14},{"ruleId":"206","severity":1,"message":"232","line":73,"column":25,"nodeType":"208","messageId":"209","endLine":73,"endColumn":33},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"210","line":4,"column":10,"nodeType":"208","messageId":"209","endLine":4,"endColumn":18},{"ruleId":"206","severity":1,"message":"211","line":4,"column":20,"nodeType":"208","messageId":"209","endLine":4,"endColumn":23},{"ruleId":"206","severity":1,"message":"212","line":4,"column":25,"nodeType":"208","messageId":"209","endLine":4,"endColumn":36},{"ruleId":"206","severity":1,"message":"213","line":6,"column":10,"nodeType":"208","messageId":"209","endLine":6,"endColumn":24},{"ruleId":"206","severity":1,"message":"214","line":6,"column":26,"nodeType":"208","messageId":"209","endLine":6,"endColumn":31},{"ruleId":"206","severity":1,"message":"215","line":22,"column":7,"nodeType":"208","messageId":"209","endLine":22,"endColumn":11},{"ruleId":"206","severity":1,"message":"213","line":5,"column":10,"nodeType":"208","messageId":"209","endLine":5,"endColumn":24},{"ruleId":"206","severity":1,"message":"215","line":16,"column":7,"nodeType":"208","messageId":"209","endLine":16,"endColumn":11},{"ruleId":"206","severity":1,"message":"227","line":31,"column":7,"nodeType":"208","messageId":"209","endLine":31,"endColumn":16},{"ruleId":"206","severity":1,"message":"228","line":39,"column":7,"nodeType":"208","messageId":"209","endLine":39,"endColumn":13},{"ruleId":"206","severity":1,"message":"225","line":60,"column":7,"nodeType":"208","messageId":"209","endLine":60,"endColumn":16},{"ruleId":"206","severity":1,"message":"226","line":98,"column":44,"nodeType":"208","messageId":"209","endLine":98,"endColumn":48},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"215","line":13,"column":7,"nodeType":"208","messageId":"209","endLine":13,"endColumn":11},{"ruleId":"206","severity":1,"message":"225","line":57,"column":7,"nodeType":"208","messageId":"209","endLine":57,"endColumn":16},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"216","line":3,"column":27,"nodeType":"208","messageId":"209","endLine":3,"endColumn":37},{"ruleId":"206","severity":1,"message":"217","line":6,"column":27,"nodeType":"208","messageId":"209","endLine":6,"endColumn":35},{"ruleId":"206","severity":1,"message":"241","line":6,"column":37,"nodeType":"208","messageId":"209","endLine":6,"endColumn":51},{"ruleId":"206","severity":1,"message":"215","line":16,"column":7,"nodeType":"208","messageId":"209","endLine":16,"endColumn":11},{"ruleId":"206","severity":1,"message":"218","line":66,"column":7,"nodeType":"208","messageId":"209","endLine":66,"endColumn":19},{"ruleId":"206","severity":1,"message":"219","line":73,"column":7,"nodeType":"208","messageId":"209","endLine":73,"endColumn":15},{"ruleId":"206","severity":1,"message":"240","line":85,"column":7,"nodeType":"208","messageId":"209","endLine":85,"endColumn":12},{"ruleId":"206","severity":1,"message":"220","line":95,"column":11,"nodeType":"208","messageId":"209","endLine":95,"endColumn":14},{"ruleId":"206","severity":1,"message":"221","line":95,"column":15,"nodeType":"208","messageId":"209","endLine":95,"endColumn":19},{"ruleId":"222","severity":1,"message":"223","line":170,"column":29,"nodeType":"224","endLine":170,"endColumn":40},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"215","line":14,"column":7,"nodeType":"208","messageId":"209","endLine":14,"endColumn":11},{"ruleId":"206","severity":1,"message":"227","line":29,"column":7,"nodeType":"208","messageId":"209","endLine":29,"endColumn":16},{"ruleId":"206","severity":1,"message":"228","line":37,"column":7,"nodeType":"208","messageId":"209","endLine":37,"endColumn":13},{"ruleId":"206","severity":1,"message":"242","line":56,"column":7,"nodeType":"208","messageId":"209","endLine":56,"endColumn":19},{"ruleId":"206","severity":1,"message":"225","line":64,"column":7,"nodeType":"208","messageId":"209","endLine":64,"endColumn":16},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"212","line":4,"column":10,"nodeType":"208","messageId":"209","endLine":4,"endColumn":21},{"ruleId":"206","severity":1,"message":"215","line":14,"column":7,"nodeType":"208","messageId":"209","endLine":14,"endColumn":11},{"ruleId":"206","severity":1,"message":"227","line":29,"column":7,"nodeType":"208","messageId":"209","endLine":29,"endColumn":16},{"ruleId":"206","severity":1,"message":"228","line":37,"column":7,"nodeType":"208","messageId":"209","endLine":37,"endColumn":13},{"ruleId":"206","severity":1,"message":"229","line":39,"column":7,"nodeType":"208","messageId":"209","endLine":39,"endColumn":13},{"ruleId":"206","severity":1,"message":"225","line":58,"column":7,"nodeType":"208","messageId":"209","endLine":58,"endColumn":16},{"ruleId":"206","severity":1,"message":"230","line":65,"column":7,"nodeType":"208","messageId":"209","endLine":65,"endColumn":14},{"ruleId":"206","severity":1,"message":"232","line":72,"column":20,"nodeType":"208","messageId":"209","endLine":72,"endColumn":28},{"ruleId":"206","severity":1,"message":"233","line":93,"column":7,"nodeType":"208","messageId":"209","endLine":93,"endColumn":14},{"ruleId":"206","severity":1,"message":"234","line":93,"column":15,"nodeType":"208","messageId":"209","endLine":93,"endColumn":20},{"ruleId":"235","severity":1,"message":"243","line":102,"column":33,"nodeType":"237","messageId":"238","endLine":102,"endColumn":69,"fix":"244"},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","'gql' is defined but never used.","'useMutation' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'Logo' is assigned a value but never used.","'useHistory' is defined but never used.","'faSearch' is defined but never used.","'Actionbutton' is assigned a value but never used.","'IdButton' is assigned a value but never used.","'_id' is assigned a value but never used.","'code' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'TableData' is assigned a value but never used.","'data' is assigned a value but never used.","'SelectBox' is assigned a value but never used.","'Option' is assigned a value but never used.","'Button' is assigned a value but never used.","'LinkTag' is assigned a value but never used.","'id' is assigned a value but never used.","'setState' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property code.","MemberExpression","unexpectedWhitespace",{"range":"247","text":"248"},"'Input' is assigned a value but never used.","'faTruckLoading' is defined but never used.","'TableHeading' is assigned a value but never used.","Unexpected whitespace before property slno_scode_regno.",{"range":"249","text":"248"},"no-global-assign","no-unsafe-negation",[1971,1973],".",[2149,2151]]