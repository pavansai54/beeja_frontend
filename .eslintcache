[{"/home/shivasai/Desktop/T_beeja/t-beeja-web/src/index.js":"1","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/App.js":"2","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/history.js":"3","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/LoginPage.js":"4","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/HomePage.js":"5","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/HR_Page.js":"6","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/employee/ListOfEmployee.js":"7","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/employee/CreateEmployee.js":"8","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/employee/EditEmployee.js":"9","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/employee/EmployeeDetails.js":"10","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/personalDetails /ListofPersonalDetails.js":"11","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/personalDetails /CreatePersonalDetails.js":"12","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/personalDetails /PersonalDetails.js":"13","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/personalDetails /EditPersonalDetails.js":"14","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/accounting /Accounting.js":"15","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/accounting /CreateSystemDetail.js":"16","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/services/PersonalDetailService.js":"17","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/services/EmployeeService.js":"18"},{"size":480,"mtime":1621083062006,"results":"19","hashOfConfig":"20"},{"size":2022,"mtime":1621140352391,"results":"21","hashOfConfig":"20"},{"size":84,"mtime":1621083001221,"results":"22","hashOfConfig":"20"},{"size":2067,"mtime":1621083062006,"results":"23","hashOfConfig":"20"},{"size":2866,"mtime":1621083062006,"results":"24","hashOfConfig":"20"},{"size":2809,"mtime":1621141314497,"results":"25","hashOfConfig":"20"},{"size":5990,"mtime":1621083062006,"results":"26","hashOfConfig":"20"},{"size":6207,"mtime":1621083062006,"results":"27","hashOfConfig":"20"},{"size":6938,"mtime":1621083062006,"results":"28","hashOfConfig":"20"},{"size":4884,"mtime":1621083062006,"results":"29","hashOfConfig":"20"},{"size":5906,"mtime":1621141022129,"results":"30","hashOfConfig":"20"},{"size":5932,"mtime":1621141243709,"results":"31","hashOfConfig":"20"},{"size":4806,"mtime":1621141111048,"results":"32","hashOfConfig":"20"},{"size":7002,"mtime":1621140844779,"results":"33","hashOfConfig":"20"},{"size":2543,"mtime":1621083062006,"results":"34","hashOfConfig":"20"},{"size":3495,"mtime":1621083062006,"results":"35","hashOfConfig":"20"},{"size":850,"mtime":1621083062006,"results":"36","hashOfConfig":"20"},{"size":748,"mtime":1621083062006,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"5bhn9y",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"40"},"/home/shivasai/Desktop/T_beeja/t-beeja-web/src/index.js",[],["85","86"],"/home/shivasai/Desktop/T_beeja/t-beeja-web/src/App.js",[],"/home/shivasai/Desktop/T_beeja/t-beeja-web/src/history.js",[],"/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/LoginPage.js",[],"/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/HomePage.js",["87"],"import React, { Component, Fragment } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport logo from './images/mobile_black.png';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\ncolor: ${(props) => props.color};\nposition: sticky;\ntop: 0px;\nfont-size: 20px;\npadding: 8px;\ntext-align:${(props) => props.text};\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom:-5px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 3px solid #ddd;\n`;\nconst TableData = Styled.td`\nborder: 3px solid #ddd;\nheight:30px;\nfont-size:20px;\nfont-weight:bold;\npadding:40px;\ncursor: pointer;\nvertical-align:bottom;\ntext-align:left;\n&:hover {background-color: grey;}\n`;\nconst TableRow = Styled.tr`\nborder: 3px solid #ddd;\n &:nth-child(even){background-color: #F2F2F2;}\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nfont-size: 15px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nmargin: -2px 15px;\ncursor: pointer;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nexport const HomePage = () => {\n\n    return (\n        <Fragment>\n            <Navbar bgColor=\"powderblue\" color=\"black\">\n                <Logo src={logo}/> \n                Beeja\n            </Navbar>\n            <Navbar bgColor=\"grey\" color=\"white\" text=\"center\">\n                Home page\n                <Button>\n                    <LinkTag to={\"/\"}>\n                        <FontAwesomeIcon icon={faSignOutAlt}></FontAwesomeIcon> Logout\n                 </LinkTag>\n                </Button>\n            </Navbar>\n            <Table>\n                <TableRow>\n                    <TableRow>\n                        <TableData>\n                            <LinkTag to={\"/hr\"} >HR </LinkTag>\n                        </TableData>\n                    </TableRow>\n                    <TableRow>\n                        <TableData>\n                            <LinkTag to={\"/inventorypage\"}> ACCOUNTING</LinkTag>\n                        </TableData>\n                    </TableRow>\n                    <TableRow>\n                        <TableData>\n                            <LinkTag to={\"/list\"} >EMOPLOYEE DIRECTORY</LinkTag>\n                        </TableData>\n                    </TableRow>\n                    <TableRow>\n                        <TableData> CLIENT</TableData>\n                    </TableRow>\n                    <TableRow >\n                        <TableData>\n                            DOCUMENTATION\n                        </TableData>\n                    </TableRow>\n                </TableRow>\n            </Table>\n        </Fragment>\n    )\n}","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/HR_Page.js",["88","89","90","91"],"/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/employee/ListOfEmployee.js",["92","93","94","95","96","97","98","99","100"],"import React, { Fragment, useState, useEffect, useCallback } from 'react';\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash, faSearch, faPlus, faHome, faList } from '@fortawesome/free-solid-svg-icons'\nimport EmployeeService from '../services/EmployeeService';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:30px;\nfont-size: 15px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nmargin: -1px 15px;\ncursor: pointer;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\ntext-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst Actionbutton = Styled.button`\nheight:15px;\nwidth:15px;\ndisplay:inline-block;\nbackground-color:rgba(255,255,255,0.7);\nborder:1px solid gray;\n`;\nconst IdButton = Styled.button`\n\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover = Styled.a`\n&:hover {\n    color:blue;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:47%;\nheight:24px;\nfont-size:15px;\n`;\n\n\nexport const ListOfEmployee = () => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [data, setdata] = useState([]);\n\n\n\n    const deletedEmployee = useCallback((id) => {\n        EmployeeService.deleteEmployeeDetail(id)\n            .then(function (response) {\n                setIsLoaded(false)\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n\n    }, [])\n\n    useEffect(() => {\n        if (!isLoaded && data != []) {\n            EmployeeService.getAllEmployeeDetail()\n                .then(\n                    (result) => {\n                        setIsLoaded(true);\n                        setdata(result.data);\n                    },\n                    (error) => {\n                        setIsLoaded(true);\n\n                    }\n                )\n        }\n\n    }, [isLoaded])\n\n\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n\n            <Fragment>\n                <Navbar bgColor=\"grey\" color=\"white\">\n                    List of Employee\n                    <Input type=\"text\" placeholder=\"Search\" ></Input>\n                    <Button>\n                        <LinkTag to={\"/home\"}>\n                            <FontAwesomeIcon icon={faHome}></FontAwesomeIcon> home\n                        </LinkTag>\n                    </Button>\n                    <Button >\n                        <LinkTag to={\"/adding\"}>\n                            <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon> Add\n                        </LinkTag>\n                    </Button>\n                </Navbar>\n                <Break />\n                <Container>\n                    <Table>\n                        <TableRow>\n                            <TableHeading>ID</TableHeading>\n                            <TableHeading>Name</TableHeading>\n                            <TableHeading>Email</TableHeading>\n                            <TableHeading>Role</TableHeading>\n                            <TableHeading>Department</TableHeading>\n                            <TableHeading>JoiningDate</TableHeading>\n                            <TableHeading>MobileNumber</TableHeading>\n                            <TableHeading>Edit</TableHeading>\n                            <TableHeading>Delete</TableHeading>\n                        </TableRow>\n\n                        {data.map((employee) => (\n                            <TableRow>\n                                <LinkTag to={`/display/${employee._id}`}>\n                                    <TableData key={employee._id}>{employee.code}</TableData>\n                                </LinkTag>\n                                <TableData>{employee.name}</TableData>\n                                <TableData>{employee.email}</TableData>\n                                <TableData>{employee.role}</TableData>\n                                <TableData>{employee.department}</TableData>\n                                <TableData>{employee.joinedDate}</TableData>\n                                <TableData>{employee.mobile}</TableData>\n                                <TableData style={{ \"text-align\": \"center\" }} >\n                                    <LinkTag to={`/edit/${employee._id}`}>\n                                        <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                                    </LinkTag>\n                                </TableData>\n                                <TableData style={{ \"text-align\": \"center\" }} >\n                                    <LinkTag>\n                                        <FontAwesomeIcon icon={faTrash} onClick={() => deletedEmployee(employee._id)}></FontAwesomeIcon>\n                                    </LinkTag>\n                                </TableData>\n                            </TableRow>\n                        )\n                        )}\n                    </Table>\n                </Container>\n            </Fragment>\n        )\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/employee/CreateEmployee.js",["101","102","103","104"],"import React, { Fragment, useState, } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link, useHistory } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const CreateEmployee = () => {\n    const history = useHistory();\n    const [formData, createFormData] = useState({\n        name: \"\",\n        code: \"\",\n        email: \" \",\n        mobile: \"\",\n        department: \"\",\n        joinedDate: \"\",\n        role: \"\"\n    });\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n       EmployeeService.createEmployeeDetail(formData)\n            .then(function (response) {\n                history.push('/list');\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    };\n\n\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Create an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"name\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobile\" onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn><Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinedDate\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                            Submit\n                                {/* <LinkTag to={\"/list\"}>Submit</LinkTag> */}\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n\n\n\n\n\n\n\n\n\n\n\n","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/employee/EditEmployee.js",["105","106","107"],"import React, {  Fragment, useState, useEffect } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link, useParams,useHistory } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EditEmployee = () => {\n    const history = useHistory();\n    const { id } = useParams();\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [empState, setState] = useState({\n        name: '',\n        code: \"\",\n        email: \" \",\n        mobile: \"\",\n        department: \"\",\n        joinedDate: \"\",\n        role: \"\"\n    })\n\n\n    const handleChange = (e) => {\n        setState({\n            ...empState,\n            [e.target.name]: e.target.value.trim(),\n        });\n    };\n\n    const User = ({\n        name: `${empState.name}`,\n        email: `${empState.email}`,\n        mobile: `${empState.mobile}`,\n        department: `${empState.department}`,\n        joinedDate: `${empState.joinedDate}`,\n        role: `${empState.role}`\n    })\n\n    const HandleSubmit = async (e) => {\n        e.preventDefault();\n        EmployeeService.updateEmployeeDetail(User,id)\n            .then((result) => {\n                history.push('/list');\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    }\n\n    useEffect(() => {\n        EmployeeService.getOneEmployeeDetail(id)\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setState(result.data);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }, [])\n\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    }\n    return (\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Edit an Employee\n            </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name:</Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"name\" value={empState.name} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" value={empState.code} required readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" value={empState.email} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobile\" value={empState.mobile} onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" value={empState.department} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" value={empState.role} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn> <Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinedDate\" value={empState.joinedDate} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Button type=\"Cancel\">\n                            <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                        </Button></TableColumn>\n                        <TableColumn><Button onClick={HandleSubmit}>\n                            Submit\n                        </Button></TableColumn>\n                    </TableRow>\n                </Table>\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/employee/EmployeeDetails.js",["108","109","110","111","112","113","114"],"import React, { Fragment, useState, useEffect } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService';\nimport { faBackspace, faBackward, faHome } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nfont-size: 20px;\noutline: none;\nborder: none;\nwidth: 80px;\nfloat: right;\nmargin: 1px 15px;\ncursor: pointer;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EmployeeDetails = () => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const { id } = useParams();\n\n    const [empState, setState] = useState({\n        name: \"\",\n        code: \"\",\n        email: \" \",\n        mobile: \"\",\n        department: \"\",\n        joinedDate: \"\",\n        role: \"\"\n    })\n\n    useEffect(() => {\n        EmployeeService.getOneEmployeeDetail(id)\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setState(result.data);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }, [])\n\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n\n    }\n\n\n\n    return (\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Employee Details\n                <Button>\n                    <LinkTag to={\"/list\"}>\n                        <FontAwesomeIcon icon={faBackward}></FontAwesomeIcon> \n                    </LinkTag>\n                </Button>\n            </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={empState.name} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code </Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.code} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.email} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number </Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.mobile} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department</Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.department} readOnly />\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.role} readOnly />\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date</Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.joinedDate} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                </Table>\n            </Container>\n        </Fragment>\n    );\n}\n\n","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/personalDetails /ListofPersonalDetails.js",["115","116","117","118","119"],"/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/personalDetails /CreatePersonalDetails.js",["120","121","122","123"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link,useHistory } from 'react-router-dom';\nimport PersonalDetailService from '../services/PersonalDetailService';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n       props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\nexport const Create_PersonalDetails=()=>{\n    const history = useHistory();\n    const [formData, createFormData] = useState({\n        Name:\"\",\n        code: \"\",\n        Email: \" \",\n        Mobile: \"\",\n        PanCard_No: \"\",\n        Account_No: \"\",\n        Ifsc_Code: \"\"\n    });\n\n   \n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n       PersonalDetailService.createPersonalDetail(formData)\n            .then(function (response) {\n                    history.push(\"/listpersonal\");\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    };\n\n\n    return(\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Add Personal Details\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"Name\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\"  name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\"  name=\"Email\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"Mobile\" onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    {/* <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\"  onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow> */}\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"PAN\"> PAN: </Lable></TableColumn>\n                        <TableColumn><Input  name=\"PanCard_No\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Account Number\" >Account Number: </Lable></TableColumn>\n                        <TableColumn><Input name=\"Account_No\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"IFSC Code\">IFSC Code: </Lable></TableColumn>\n                        <TableColumn><Input  name=\"Ifsc_Code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/personal\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                            Submit\n                                {/* <LinkTag to={\"/personal\"}></LinkTag> */}\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    )\n}","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/personalDetails /PersonalDetails.js",["124","125","126","127","128"],"/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/personalDetails /EditPersonalDetails.js",["129","130","131","132","133"],"/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/accounting /Accounting.js",["134","135","136","137","138","139","140"],"import { React, Fragment, useState } from \"react\";\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\ntext-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover = Styled.a`\n&:hover {\n    color:blue;\n`;\nexport const InventoryPage= () => {\n\n    return (\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">Inventory Page\n            <Button >\n                   <LinkTag to={\"/create\"} >\n                        <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon> ADD\n                        </LinkTag>\n                </Button>\n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n                    <TableRow>\n                        <TableHeading>ID</TableHeading>\n                        <TableHeading>Name</TableHeading>\n                        <TableHeading>Device</TableHeading>\n                        <TableHeading>Config</TableHeading>\n                        <TableHeading>SL.No/S.Code/Reg.No</TableHeading>\n                        <TableHeading>DeviceHistory</TableHeading>\n                        <TableHeading>Edit</TableHeading>\n                        <TableHeading>Delete</TableHeading>\n                    </TableRow>\n                  </Table>\n            </Container>\n        </Fragment>\n\n    )\n}\n\n","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/accounting /CreateSystemDetail.js",["141","142","143","144","145","146","147","148"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const Create = () => {\n    return (\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Add System Details\n            </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"ID\">ID: </Lable></TableColumn>\n                        <TableColumn ><Input required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\">Name: </Lable></TableColumn>\n                        <TableColumn><Input required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Device\">Device: </Lable></TableColumn>\n                        <TableColumn><Input required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Config\">Config: </Lable></TableColumn>\n                        <TableColumn><Input required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"SL.No/S.Code/Reg.No\">SL.No/S.Code/Reg.No: </Lable></TableColumn>\n                        <TableColumn><Input required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"DeviceHistory\">DeviceHistory: </Lable></TableColumn>\n                        <TableColumn><Input required /></TableColumn>\n                    </TableRow>\n                    <Break />\n\n                    <TableRow>\n                        <TableColumn >\n                            <Button >Cancel</Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button >Submit</Button>\n                        </TableColumn>\n                    </TableRow>\n\n                </Table>\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/services/PersonalDetailService.js",["149","150","151"],"import axios from 'axios';\n\n\nconst apiBaseUri = \"https://us-central1-t-beeja.cloudfunctions.net/function-beejaDB\";\n\nclass PersonalDetailService {\n\n    getAllPersonalDetail() {\n        return axios.get(apiBaseUri + \"/personaldetails\");\n    }\n\n    getOnePersonalDetail(personaldetailId) {\n        return axios.get(apiBaseUri + \"/personaldetail\" + \"/\" + personaldetailId);\n    }\n\n    createPersonalDetail(personaldetail) {\n        return axios.post(apiBaseUri + \"/personaldetail\", personaldetail);\n    }\n\n    updatePersonalDetail(personaldetail, personaldetailId) {\n        return axios.put(apiBaseUri + \"/personaldetail\" + \"/\" + personaldetailId,personaldetail);\n    }\n\n    deletePersonalDetail(personaldetailId) {\n        return axios.delete(apiBaseUri + \"/personaldetail\" + \"/\" + personaldetailId);\n    }\n}\nexport default new PersonalDetailService();","/home/shivasai/Desktop/T_beeja/t-beeja-web/src/component/services/EmployeeService.js",["152","153","154"],"import axios from 'axios';\n\n\nconst apiBaseUri = \"https://us-central1-t-beeja.cloudfunctions.net/function-beejaDB\";\n\nclass EmployeeService {\n\n    getAllEmployeeDetail() {\n        return axios.get(apiBaseUri + \"/employees\");\n    }\n\n    getOneEmployeeDetail(employeeId) {\n        return axios.get(apiBaseUri + \"/employee\" + \"/\" + employeeId);\n    }\n\n    createEmployeeDetail(employee) {\n        return axios.post(apiBaseUri + \"/employee\", employee);\n    }\n\n    updateEmployeeDetail(employee, employeeId) {\n        return axios.put(apiBaseUri + \"/employee\" + \"/\" + employeeId,employee);\n    }\n\n    deleteEmployeeDetail(employeeId) {\n        return axios.delete(apiBaseUri + \"/employee\" + \"/\" + employeeId);\n    }\n}\nexport default new EmployeeService();",{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"163","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":24},{"ruleId":"159","severity":1,"message":"164","line":5,"column":26,"nodeType":"161","messageId":"162","endLine":5,"endColumn":31},{"ruleId":"159","severity":1,"message":"165","line":23,"column":7,"nodeType":"161","messageId":"162","endLine":23,"endColumn":11},{"ruleId":"159","severity":1,"message":"166","line":61,"column":7,"nodeType":"161","messageId":"162","endLine":61,"endColumn":12},{"ruleId":"159","severity":1,"message":"167","line":5,"column":27,"nodeType":"161","messageId":"162","endLine":5,"endColumn":35},{"ruleId":"159","severity":1,"message":"168","line":5,"column":53,"nodeType":"161","messageId":"162","endLine":5,"endColumn":59},{"ruleId":"159","severity":1,"message":"165","line":16,"column":7,"nodeType":"161","messageId":"162","endLine":16,"endColumn":11},{"ruleId":"159","severity":1,"message":"169","line":67,"column":7,"nodeType":"161","messageId":"162","endLine":67,"endColumn":19},{"ruleId":"159","severity":1,"message":"170","line":74,"column":7,"nodeType":"161","messageId":"162","endLine":74,"endColumn":15},{"ruleId":"159","severity":1,"message":"166","line":81,"column":7,"nodeType":"161","messageId":"162","endLine":81,"endColumn":12},{"ruleId":"159","severity":1,"message":"171","line":95,"column":19,"nodeType":"161","messageId":"162","endLine":95,"endColumn":27},{"ruleId":"172","severity":1,"message":"173","line":113,"column":31,"nodeType":"174","messageId":"175","endLine":113,"endColumn":33},{"ruleId":"176","severity":1,"message":"177","line":127,"column":8,"nodeType":"178","endLine":127,"endColumn":18,"suggestions":"179"},{"ruleId":"159","severity":1,"message":"163","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":24},{"ruleId":"159","severity":1,"message":"164","line":5,"column":26,"nodeType":"161","messageId":"162","endLine":5,"endColumn":31},{"ruleId":"159","severity":1,"message":"165","line":16,"column":7,"nodeType":"161","messageId":"162","endLine":16,"endColumn":11},{"ruleId":"159","severity":1,"message":"180","line":60,"column":7,"nodeType":"161","messageId":"162","endLine":60,"endColumn":16},{"ruleId":"159","severity":1,"message":"165","line":14,"column":7,"nodeType":"161","messageId":"162","endLine":14,"endColumn":11},{"ruleId":"159","severity":1,"message":"180","line":58,"column":7,"nodeType":"161","messageId":"162","endLine":58,"endColumn":16},{"ruleId":"176","severity":1,"message":"181","line":125,"column":8,"nodeType":"178","endLine":125,"endColumn":10,"suggestions":"182"},{"ruleId":"159","severity":1,"message":"183","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":21},{"ruleId":"159","severity":1,"message":"184","line":5,"column":35,"nodeType":"161","messageId":"162","endLine":5,"endColumn":41},{"ruleId":"159","severity":1,"message":"165","line":16,"column":7,"nodeType":"161","messageId":"162","endLine":16,"endColumn":11},{"ruleId":"159","severity":1,"message":"185","line":31,"column":7,"nodeType":"161","messageId":"162","endLine":31,"endColumn":16},{"ruleId":"159","severity":1,"message":"186","line":39,"column":7,"nodeType":"161","messageId":"162","endLine":39,"endColumn":13},{"ruleId":"159","severity":1,"message":"180","line":64,"column":7,"nodeType":"161","messageId":"162","endLine":64,"endColumn":16},{"ruleId":"176","severity":1,"message":"181","line":103,"column":8,"nodeType":"178","endLine":103,"endColumn":10,"suggestions":"187"},{"ruleId":"159","severity":1,"message":"188","line":3,"column":16,"nodeType":"161","messageId":"162","endLine":3,"endColumn":25},{"ruleId":"159","severity":1,"message":"165","line":16,"column":7,"nodeType":"161","messageId":"162","endLine":16,"endColumn":11},{"ruleId":"159","severity":1,"message":"171","line":85,"column":19,"nodeType":"161","messageId":"162","endLine":85,"endColumn":27},{"ruleId":"172","severity":1,"message":"173","line":102,"column":31,"nodeType":"174","messageId":"175","endLine":102,"endColumn":33},{"ruleId":"176","severity":1,"message":"177","line":115,"column":8,"nodeType":"178","endLine":115,"endColumn":18,"suggestions":"189"},{"ruleId":"159","severity":1,"message":"165","line":14,"column":7,"nodeType":"161","messageId":"162","endLine":14,"endColumn":11},{"ruleId":"159","severity":1,"message":"185","line":29,"column":7,"nodeType":"161","messageId":"162","endLine":29,"endColumn":16},{"ruleId":"159","severity":1,"message":"186","line":37,"column":7,"nodeType":"161","messageId":"162","endLine":37,"endColumn":13},{"ruleId":"159","severity":1,"message":"180","line":58,"column":7,"nodeType":"161","messageId":"162","endLine":58,"endColumn":16},{"ruleId":"159","severity":1,"message":"165","line":16,"column":7,"nodeType":"161","messageId":"162","endLine":16,"endColumn":11},{"ruleId":"159","severity":1,"message":"185","line":31,"column":7,"nodeType":"161","messageId":"162","endLine":31,"endColumn":16},{"ruleId":"159","severity":1,"message":"186","line":39,"column":7,"nodeType":"161","messageId":"162","endLine":39,"endColumn":13},{"ruleId":"159","severity":1,"message":"180","line":64,"column":7,"nodeType":"161","messageId":"162","endLine":64,"endColumn":16},{"ruleId":"176","severity":1,"message":"181","line":102,"column":8,"nodeType":"178","endLine":102,"endColumn":10,"suggestions":"190"},{"ruleId":"159","severity":1,"message":"165","line":14,"column":7,"nodeType":"161","messageId":"162","endLine":14,"endColumn":11},{"ruleId":"159","severity":1,"message":"185","line":29,"column":7,"nodeType":"161","messageId":"162","endLine":29,"endColumn":16},{"ruleId":"159","severity":1,"message":"186","line":37,"column":7,"nodeType":"161","messageId":"162","endLine":37,"endColumn":13},{"ruleId":"159","severity":1,"message":"180","line":58,"column":7,"nodeType":"161","messageId":"162","endLine":58,"endColumn":16},{"ruleId":"176","severity":1,"message":"181","line":125,"column":8,"nodeType":"178","endLine":125,"endColumn":10,"suggestions":"191"},{"ruleId":"159","severity":1,"message":"192","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":35},{"ruleId":"159","severity":1,"message":"188","line":3,"column":16,"nodeType":"161","messageId":"162","endLine":3,"endColumn":25},{"ruleId":"159","severity":1,"message":"193","line":5,"column":18,"nodeType":"161","messageId":"162","endLine":5,"endColumn":24},{"ruleId":"159","severity":1,"message":"194","line":5,"column":26,"nodeType":"161","messageId":"162","endLine":5,"endColumn":33},{"ruleId":"159","severity":1,"message":"165","line":17,"column":7,"nodeType":"161","messageId":"162","endLine":17,"endColumn":11},{"ruleId":"159","severity":1,"message":"180","line":55,"column":7,"nodeType":"161","messageId":"162","endLine":55,"endColumn":16},{"ruleId":"159","severity":1,"message":"166","line":71,"column":7,"nodeType":"161","messageId":"162","endLine":71,"endColumn":12},{"ruleId":"159","severity":1,"message":"192","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":35},{"ruleId":"159","severity":1,"message":"163","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":24},{"ruleId":"159","severity":1,"message":"164","line":4,"column":26,"nodeType":"161","messageId":"162","endLine":4,"endColumn":31},{"ruleId":"159","severity":1,"message":"165","line":15,"column":7,"nodeType":"161","messageId":"162","endLine":15,"endColumn":11},{"ruleId":"159","severity":1,"message":"185","line":30,"column":7,"nodeType":"161","messageId":"162","endLine":30,"endColumn":16},{"ruleId":"159","severity":1,"message":"186","line":38,"column":7,"nodeType":"161","messageId":"162","endLine":38,"endColumn":13},{"ruleId":"159","severity":1,"message":"180","line":59,"column":7,"nodeType":"161","messageId":"162","endLine":59,"endColumn":16},{"ruleId":"159","severity":1,"message":"195","line":65,"column":7,"nodeType":"161","messageId":"162","endLine":65,"endColumn":14},{"ruleId":"196","severity":1,"message":"197","line":13,"column":57,"nodeType":"174","messageId":"198","endLine":13,"endColumn":58},{"ruleId":"196","severity":1,"message":"197","line":21,"column":57,"nodeType":"174","messageId":"198","endLine":21,"endColumn":58},{"ruleId":"196","severity":1,"message":"197","line":25,"column":60,"nodeType":"174","messageId":"198","endLine":25,"endColumn":61},{"ruleId":"196","severity":1,"message":"197","line":13,"column":51,"nodeType":"174","messageId":"198","endLine":13,"endColumn":52},{"ruleId":"196","severity":1,"message":"197","line":21,"column":51,"nodeType":"174","messageId":"198","endLine":21,"endColumn":52},{"ruleId":"196","severity":1,"message":"197","line":25,"column":54,"nodeType":"174","messageId":"198","endLine":25,"endColumn":55},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'Logo' is assigned a value but never used.","'Hover' is assigned a value but never used.","'faSearch' is defined but never used.","'faList' is defined but never used.","'Actionbutton' is assigned a value but never used.","'IdButton' is assigned a value but never used.","'setError' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["201"],"'TableData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["202"],"'faBackspace' is defined but never used.","'faHome' is defined but never used.","'SelectBox' is assigned a value but never used.","'Option' is assigned a value but never used.",["203"],"'useParams' is defined but never used.",["204"],["205"],["206"],"'useState' is defined but never used.","'faEdit' is defined but never used.","'faTrash' is defined but never used.","'LinkTag' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"209","fix":"211"},{"desc":"207","fix":"212"},{"desc":"209","fix":"213"},{"desc":"209","fix":"214"},"Update the dependencies array to be: [data, isLoaded]",{"range":"215","text":"216"},"Update the dependencies array to be: [id]",{"range":"217","text":"218"},{"range":"219","text":"218"},{"range":"220","text":"216"},{"range":"221","text":"218"},{"range":"222","text":"218"},[2771,2781],"[data, isLoaded]",[2744,2746],"[id]",[2168,2170],[2613,2623],[2174,2176],[2818,2820]]