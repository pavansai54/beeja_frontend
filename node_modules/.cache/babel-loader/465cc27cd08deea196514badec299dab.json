{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/chetankumarbandari/Documents/Dev/techatcore/t-beeja/t-beeja-web/src/component/EmployeeDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, Fragment, useState } from 'react';\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nconst Navbar = Styled.nav`\nbackground-color: ${props => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${props => props.color};\nfont-size:25px;\n`;\n_c = Navbar;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\n_c2 = Lable;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\n_c3 = Input;\nconst Break = Styled.br`\n`;\n_c4 = Break;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props => props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\n_c5 = Container;\nconst Table = Styled.table`\n`;\n_c6 = Table;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\n_c7 = TableRow;\nconst TableColumn = Styled.td`\n`;\n_c8 = TableColumn;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\nexport const EmployeeDetails = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [empState, setState] = useState({\n    username: \"\",\n    code: \"\",\n    email: \" \",\n    mobileNo: \"\",\n    department: \"\",\n    role: \"\",\n    joinedDate: \"\"\n  });\n  const GetEmployeeById = gql`\n    query EmpDetails($id:String!){\n        employee(id:$id){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GetEmployeeById, {\n    variables: {\n      id: id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"ERROR....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 23\n  }, this);\n\n  if (data && data.employee) {\n    empState.name = data.employee.name;\n    empState.code = data.employee.code;\n    empState.email = data.employee.email;\n    empState.mobileNo = data.employee.mobileNo;\n    empState.department = data.employee.department;\n    empState.role = data.employee.role;\n    empState.joinedDate = data.employee.joinedDate;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bgColor: \"grey\",\n      color: \"white\",\n      children: \"Employee Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableColumn, {\n            children: /*#__PURE__*/_jsxDEV(Lable, {\n              htmlFor: \"Name\",\n              children: \" Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableColumn, {\n            children: [\":\", /*#__PURE__*/_jsxDEV(Input, {\n              value: empState.name,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableColumn, {\n            children: /*#__PURE__*/_jsxDEV(Lable, {\n              htmlFor: \"Empl-Id\",\n              children: \" Employee Code \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableColumn, {\n            children: [\":\", /*#__PURE__*/_jsxDEV(Input, {\n              value: empState.code,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableColumn, {\n            children: /*#__PURE__*/_jsxDEV(Lable, {\n              htmlFor: \"Email\",\n              children: \" Email \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableColumn, {\n            children: [\":\", /*#__PURE__*/_jsxDEV(Input, {\n              value: empState.email,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableColumn, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Lable, {\n              htmlFor: \"Mobile Number\",\n              children: \" Mobile Number \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableColumn, {\n            children: [\":\", /*#__PURE__*/_jsxDEV(Input, {\n              value: empState.mobileNo,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableColumn, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Lable, {\n              htmlFor: \"Department\",\n              children: \" Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableColumn, {\n            children: [\":\", /*#__PURE__*/_jsxDEV(Input, {\n              value: empState.department,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableColumn, {\n            children: /*#__PURE__*/_jsxDEV(Lable, {\n              htmlFor: \"Role\",\n              children: \" Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableColumn, {\n            children: [\":\", /*#__PURE__*/_jsxDEV(Input, {\n              value: empState.role,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableColumn, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Lable, {\n              htmlFor: \"Date-Containerat\",\n              className: \"Selectbox1\",\n              children: \" Join Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableColumn, {\n            children: [\":\", /*#__PURE__*/_jsxDEV(Input, {\n              value: empState.joinedDate,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmployeeDetails, \"uaaW7kxpw17FQTp/crGnk7vGwRo=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c9 = EmployeeDetails;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"Lable\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"Break\");\n$RefreshReg$(_c5, \"Container\");\n$RefreshReg$(_c6, \"Table\");\n$RefreshReg$(_c7, \"TableRow\");\n$RefreshReg$(_c8, \"TableColumn\");\n$RefreshReg$(_c9, \"EmployeeDetails\");","map":{"version":3,"sources":["/Users/chetankumarbandari/Documents/Dev/techatcore/t-beeja/t-beeja-web/src/component/EmployeeDetails.js"],"names":["React","Component","Fragment","useState","Styled","Link","useParams","useMutation","gql","useQuery","Navbar","nav","props","bgColor","color","Logo","img","Lable","label","Input","input","Break","br","SelectBox","select","Option","option","Button","button","save","Container","form","Table","table","TableData","td","TableRow","tr","TableColumn","LinkTag","EmployeeDetails","id","empState","setState","username","code","email","mobileNo","department","role","joinedDate","GetEmployeeById","loading","error","data","variables","employee","name"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EmployeeDetails = () => {\n\n    const { id } = useParams();\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email: \" \",\n        mobileNo: \"\",\n        department: \"\",\n        role: \"\",\n        joinedDate: \"\"\n    })\n    const GetEmployeeById = gql`\n    query EmpDetails($id:String!){\n        employee(id:$id){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const { loading, error, data } = useQuery(GetEmployeeById, { variables: { id: id } });\n\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n    if (data && data.employee) {\n    empState.name = data.employee.name;\n    empState .code = data.employee.code;\n    empState.email = data.employee.email;\n    empState.mobileNo = data.employee.mobileNo;\n    empState.department = data.employee.department;\n    empState.role = data.employee.role;\n    empState.joinedDate = data.employee.joinedDate;\n    }\n\n\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Employee Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={empState.name} readOnly/></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code </Lable></TableColumn>\n                        <TableColumn>:<Input  value={empState.code}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input  value={empState.email}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number </Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.mobileNo}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department</Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.department} readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.role}  readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date</Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.joinedDate} readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                   \n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}